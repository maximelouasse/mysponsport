{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.router.ts","./src/app/routes/application-page/application-page.component.ts","./src/app/routes/application-page/application-page.component.html","./src/app/routes/calendar-page/calendar-page.component.ts","./src/app/routes/calendar-page/calendar-page.component.html","./src/app/routes/campaign-page/campaign-page.component.ts","./src/app/routes/campaign-page/campaign-page.component.html","./src/app/routes/connected-page/connected-page.component.ts","./src/app/routes/connected-page/connected-page.component.html","./src/app/routes/history-page/history-page.component.ts","./src/app/routes/history-page/history-page.component.html","./src/app/routes/home-page/home-page.component.ts","./src/app/routes/home-page/home-page.component.html","./src/app/routes/login-page/login-page.component.ts","./src/app/routes/login-page/login-page.component.html","./src/app/routes/message-page/message-page.component.ts","./src/app/routes/message-page/message-page.component.html","./src/app/routes/profile-page/profile-page.component.ts","./src/app/routes/profile-page/profile-page.component.html","./src/app/routes/proposition-page/proposition-page.component.ts","./src/app/routes/proposition-page/proposition-page.component.html","./src/app/routes/register-page/register-page.component.ts","./src/app/routes/register-page/register-page.component.html","./src/app/services/crud/crud.service.ts","./src/app/services/observable/observable.service.ts","./src/app/shared/form-login/form-login.component.ts","./src/app/shared/form-login/form-login.component.html","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/item-post/item-post.component.ts","./src/app/shared/item-post/item-post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from '@angular/router';\n\n  // Inner\n  import { CrudService } from \"./services/crud/crud.service\";\n//\n\n/*\nComponant configuration\n*/\n  @Component({\n    selector: 'app-root',\n    template: `\n      <app-header></app-header>\n      <router-outlet></router-outlet>\n    `\n  })\n//\n\n\n/*\nComponant class definition\n*/\n  export class AppComponent implements OnInit {\n\n    constructor(\n        private CrudService: CrudService,\n        private Router: Router\n    ){}\n\n    private getUserInfo = (email: String ) => {\n        // Use CrudService to get user infos\n        this.CrudService.readOneItem('user', `email=${email}`)\n        .then( data => {\n            console.log('SUCCES request', data);\n        })\n        .catch( error => {\n            console.log('ERROR request', error);\n        });\n    };\n\n    async ngOnInit() {\n        const userInfo = await this.CrudService.readOneItem('user', `email=${localStorage.getItem('userEmail')}`);\n\n        // Check user info\n        if(userInfo.length > 0){\n            // Change route endpoint\n            this.Router.navigateByUrl('/connected');\n        };\n    };\n  }\n//\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// Router\nimport { RouterModule } from \"@angular/router\"\nimport { AppRouterModule } from \"./app.router\";\n\n// Services\nimport { CrudService } from \"./services/crud/crud.service\";\n\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './routes/home-page/home-page.component';\nimport { ConnectedPageComponent } from './routes/connected-page/connected-page.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FormLoginComponent } from './shared/form-login/form-login.component';\nimport { ItemPostComponent } from './shared/item-post/item-post.component';\nimport { CampaignPageComponent } from './routes/campaign-page/campaign-page.component';\nimport { ApplicationPageComponent } from './routes/application-page/application-page.component';\nimport { MessagePageComponent } from './routes/message-page/message-page.component';\nimport { PropositionPageComponent } from './routes/proposition-page/proposition-page.component';\nimport { HistoryPageComponent } from './routes/history-page/history-page.component';\nimport { CalendarPageComponent } from './routes/calendar-page/calendar-page.component';\nimport { ProfilePageComponent } from './routes/profile-page/profile-page.component';\nimport { RegisterPageComponent } from './routes/register-page/register-page.component';\nimport { LoginPageComponent } from './routes/login-page/login-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    ConnectedPageComponent,\n    HeaderComponent,\n    FormLoginComponent,\n    ItemPostComponent,\n    CampaignPageComponent,\n    ApplicationPageComponent,\n    MessagePageComponent,\n    PropositionPageComponent,\n    HistoryPageComponent,\n    CalendarPageComponent,\n    ProfilePageComponent,\n    RegisterPageComponent,\n    LoginPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot( AppRouterModule, { onSameUrlNavigation: 'reload' } )\n  ],\n  providers: [CrudService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/*\r\nImports\r\n*/\r\n    // Angular\r\n    import { Routes } from '@angular/router';\r\n\r\n    // Inner\r\n    import { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\n    import { ConnectedPageComponent } from \"./routes/connected-page/connected-page.component\";\r\n    import { AuthGuard } from \"./auth.guard\";\r\n    import { CampaignPageComponent } from './routes/campaign-page/campaign-page.component';\r\n    import { MessagePageComponent } from './routes/message-page/message-page.component';\r\n    import { ApplicationPageComponent } from './routes/application-page/application-page.component';\r\n    import { PropositionPageComponent } from './routes/proposition-page/proposition-page.component';\r\n    import { HistoryPageComponent } from './routes/history-page/history-page.component';\r\n    import { CalendarPageComponent } from './routes/calendar-page/calendar-page.component';\r\n    import { ProfilePageComponent } from './routes/profile-page/profile-page.component';\r\n    import { RegisterPageComponent } from './routes/register-page/register-page.component';\r\n    import { LoginPageComponent } from './routes/login-page/login-page.component';\r\n//\r\n\r\n/*\r\nExport\r\n*/\r\n    export const AppRouterModule: Routes = [\r\n      {\r\n        path: '',\r\n        component: HomePageComponent\r\n      },\r\n      {\r\n        path: 'connected',\r\n        component: ConnectedPageComponent,\r\n        //canActivate: [ AuthGuard ]\r\n      },\r\n      {\r\n        path: 'campagne',\r\n        component: CampaignPageComponent,\r\n        //canActivate: [ AuthGuard ]\r\n      },\r\n      {\r\n        path: 'message',\r\n        component: MessagePageComponent,\r\n        //canActivate: [ AuthGuard ]\r\n      },\r\n      {\r\n        path: 'candidature',\r\n        component: ApplicationPageComponent,\r\n        //canActivate: [ AuthGuard ],\r\n        children: [\r\n          {\r\n            path: 'candidature/:id',\r\n            component: ApplicationPageComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'proposition',\r\n        component: PropositionPageComponent,\r\n        //canActivate: [ AuthGuard ],\r\n        children: [\r\n          {\r\n            path: 'proposition/:id',\r\n            component: PropositionPageComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'historique',\r\n        component: HistoryPageComponent,\r\n        //canActivate: [ AuthGuard ]\r\n      },\r\n      {\r\n        path: 'calendrier',\r\n        component: CalendarPageComponent,\r\n        //canActivate: [ AuthGuard ]\r\n      },\r\n      {\r\n        path: 'profil',\r\n        component: ProfilePageComponent,\r\n        //canActivate: [ AuthGuard ]\r\n      },\r\n      {\r\n        path: 'inscription',\r\n        component: RegisterPageComponent\r\n      },\r\n      {\r\n        path: 'connexion',\r\n        component: LoginPageComponent\r\n      }\r\n    ];\r\n//\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-application-page',\n  templateUrl: './application-page.component.html',\n  styles: [\n  ],\n})\nexport class ApplicationPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>application-page works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calendar-page',\n  templateUrl: './calendar-page.component.html',\n  styles: [\n  ],\n})\nexport class CalendarPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>calendar-page works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-campaign-page',\n  templateUrl: './campaign-page.component.html',\n  styles: [\n  ],\n})\nexport class CampaignPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>campaign-page works!</p>\n","/*\nImport\n*/\n    // Angular\n    import { Component, OnInit } from '@angular/core';\n\n    // Inner\n    import { CrudService } from \"../../services/crud/crud.service\";\n//\n\n/*\nComponant configuration\n*/\n    @Component({\n        selector: 'app-connected-page',\n        templateUrl: './connected-page.component.html',\n    })\n//\n\n/*\nComponant class definition\n*/\n    export class ConnectedPageComponent implements OnInit {\n\n        /*\n        Declarations\n        */\n            public postCollection: any;\n\n            constructor(\n                private CrudService: CrudService\n            ){}\n        //\n\n\n        /*\n        Methods\n        */\n            // Method to get the post list\n            public getPostList = async () => {\n              this.postCollection = await this.CrudService.readAllItems('posts');\n            };\n        //\n\n        /*\n        Hooks\n        */\n            ngOnInit(){\n                // Get the poost list\n                this.getPostList();\n            };\n        //\n    };\n//\n","<article *ngFor=\"let item of postCollection\">\n  <app-item-post\n      [post]=\"item\"\n  ></app-item-post>\n</article>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history-page',\n  templateUrl: './history-page.component.html',\n  styles: [\n  ],\n})\nexport class HistoryPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>history-page works!</p>\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from '@angular/router';\n\n  // Inner\n  import { CrudService } from \"../../services/crud/crud.service\";\nimport { ObservablesService } from 'src/app/services/observable/observable.service';\n//\n\n@Component({\n    selector: 'app-home-page',\n    templateUrl: './home-page.component.html',\n    styles: [],\n})\nexport class HomePageComponent implements OnInit {\n\n    // Properties\n    public userData: any;\n\n    constructor(\n      private CrudService: CrudService,\n      private Router: Router,\n      private ObservablesService: ObservablesService\n    ) {\n      // Get user data observer\n      this.ObservablesService.getUserInfo().subscribe( userDataObserver => {\n          console.log(userDataObserver);\n          if(userDataObserver === null) {\n              this.userData = null\n          } else {\n              if(userDataObserver.data.length > 0) {\n                console.log(userDataObserver);\n                  // Set local storage\n                  localStorage.setItem('userEmail', userDataObserver.data[0].email );\n\n                  // Update userData value\n                  this.userData = userDataObserver.data[0];\n              } else {\n                  this.userData = null\n              }\n          }\n      })\n    }\n\n    public getUserInfo = (email: String ) => {\n        // Get user infos\n        const userInfo = this.CrudService.readOneItem('user', `email=${email}`);\n\n        // Check user info\n        //if(userInfo.length > 0) {\n            // Change route endpoint\n            this.Router.navigateByUrl('/connected');\n        //}\n    };\n\n    ngOnInit(): void {}\n\n}\n","<app-form-login\n    *ngIf=\"!userData\"\n    (formSubmit)=\"getUserInfo($event)\"\n></app-form-login>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styles: [\n  ],\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login-page works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-message-page',\n  templateUrl: './message-page.component.html',\n  styles: [\n  ],\n})\nexport class MessagePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>message-page works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styles: [\n  ],\n})\nexport class ProfilePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile-page works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-proposition-page',\n  templateUrl: './proposition-page.component.html',\n  styles: [\n  ],\n})\nexport class PropositionPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>proposition-page works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styles: [\n  ],\n})\nexport class RegisterPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register-page works!</p>\n","// Angular\n  import { Injectable } from '@angular/core';\n  import { HttpClient, HttpHeaders } from '@angular/common/http';\n//\n\n// Inner\n  import { ObservablesService } from \"../observable/observable.service\";\n  import { environment } from 'src/environments/environment';\n//\n\n/*\nDefinition\n*/\n  @Injectable()\n  export class CrudService {\n    /*\n\t\tDéclarations\n\t\t*/\n      private apiUrl: String;\n\t\t//\n\n    // Inject module(s) in the service\n    constructor(\n      private HttpClient: HttpClient,\n      private ObservablesService: ObservablesService\n    ) {\n      this.apiUrl = environment.apiUrl;\n    };\n\n    // CRUD method: read item\n    public readOneItem(endpoint: String, param: String): Promise<any>{\n      return this.HttpClient.get(`${this.apiUrl}/${endpoint}?${param}`)\n      .toPromise()\n      .then( data => this.getData(endpoint, data))\n      .catch(this.handleError);\n    };\n\n    // CRUD method: read all items\n    public readAllItems(endpoint: String): Promise<any>{\n      return this.HttpClient.get(`https://jsonplaceholder.typicode.com/posts/`)\n      .toPromise()\n      .then( data => this.getData(endpoint, data))\n      .catch(this.handleError);\n    };\n\n    // CRUD method: create item\n    public createItem(endpoint: String, data: any): Promise<any>{\n      // Set header\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n\n      // Launch request\n      return this.HttpClient.post(`https://jsonplaceholder.typicode.com/posts`, data, { headers: myHeader })\n      .toPromise()\n      .then( data => this.getData(endpoint, data))\n      .catch(this.handleError);\n    };\n\n    // CRUD method: edit an item\n    public updateItem(endpoint: String, _id: String, data: any): Promise<any>{\n      // Set header\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n\n      // Launch request\n      return this.HttpClient.put(`https://jsonplaceholder.typicode.com/posts/${_id}`, data, { headers: myHeader })\n      .toPromise()\n      .then( data => this.getData(endpoint, data))\n      .catch(this.handleError);\n      };\n\n    // CRUD method: delete an item\n    public deleteItem(endpoint: String, _id: String): Promise<any>{\n      // Set header\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n\n      // Launch request\n      return this.HttpClient.delete(`https://jsonplaceholder.typicode.com/posts/${_id}`, { headers: myHeader })\n      .toPromise()\n      .then( data => this.getData(endpoint, data))\n      .catch(this.handleError);\n    };\n\n    /*\n    Methods to get API responses\n    */\n      // Get the API response\n      private getData = (endpoint, apiResponse: any) => {\n          // Switch endpoint to set observable value\n          switch(endpoint) {\n            case 'user':\n              // Set user info observabale value\n              this.ObservablesService.setObservableData('user', apiResponse)\n\n              // Return data\n              return apiResponse || {};\n              break;\n\n            case 'posts':\n              // Set post list observabale value\n              this.ObservablesService.setObservableData('post', apiResponse)\n\n              // Return data\n              return apiResponse || {};\n              break;\n\n            default:\n                // Retun data anytime\n                return apiResponse || {};\n                break;\n          };\n      };\n\n      // Get the API error\n      private handleError = (apiError: any) => Promise.reject(apiError.error);\n    //\n  };\n//\n","/*\nImports\n*/\n  import { Injectable } from '@angular/core';\n  import { BehaviorSubject, Observable } from 'rxjs';\n//\n\n/*\nDefinition and export\n*/\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class ObservablesService {\n\n    constructor() {}\n\n    protected userInfo: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    protected postList: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n    public getUserInfo(): Observable<any> {\n      return this.userInfo\n    };\n\n    public getPostList(): Observable<any> {\n      return this.postList\n    };\n\n    public setObservableData = (type: string, data: any) => {\n      switch(type) {\n        case 'user':\n          this.userInfo.next(data);\n          break;\n\n        case 'post':\n          this.postList.next(data);\n          break;\n\n        default:\n          break;\n      };\n    };\n  }\n//\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-form-login',\n  templateUrl: './form-login.component.html',\n  styles: [\n  ],\n})\n\nexport class FormLoginComponent implements OnInit {\n\n    @Output() formSubmit = new EventEmitter();\n\n    // Declarations\n    public formData: FormGroup;\n\n    // Inject FormBuilder\n    constructor(\n        private FormBuilder: FormBuilder\n    ) {}\n\n    // Method to reset form\n    private resetForm = ()  => {\n        this.formData = this.FormBuilder.group({\n            email: [ null, Validators.required ]\n        });\n    };\n\n    // Start\n    ngOnInit() {\n        this.resetForm();\n    }\n};\n","<form\n    [formGroup]=\"formData\"\n    (submit)=\"formSubmit.emit(formData.value.email)\"\n>\n    <input\n        formControlName=\"email\"\n        type=\"email\" name=\"email\" required minlength=\"5\" placeholder=\"Your email\"\n    >\n\n    <button\n        [disabled]=\"!formData.valid\"\n        type=\"submit\"\n    >OK</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n// Inner\nimport { ObservablesService } from '../../services/observable/observable.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styles: [\n  ],\n})\nexport class HeaderComponent implements OnInit {\n\n  /*\n  Declaration\n  */\n    // Properties\n    public userData: any;\n\n    constructor(\n        private ObservablesService: ObservablesService\n    ){\n        // Get user data observer\n        this.ObservablesService.getUserInfo().subscribe( userDataObserver => {\n            if(userDataObserver === null) {\n                this.userData = null\n            } else {\n                if(userDataObserver.data.length > 0) {\n                    // Set local storage\n                    localStorage.setItem('userEmail', userDataObserver.data[0].email );\n\n                    // Update userData value\n                    this.userData = userDataObserver.data[0];\n                } else {\n                    this.userData = null\n                }\n            }\n        })\n    }\n\n    public logout = () => {\n        // Delete localstorage\n        localStorage.removeItem('userEmail');\n\n        // Set user info observabale value\n        this.ObservablesService.setObservableData('user', null)\n    }\n\n    ngOnInit(){};\n}\n","<nav>\n  <ul>\n      <li *ngIf=\"!userData\">\n          <a [routerLink]=\"'/'\">Tableau de bord</a>\n      </li>\n      <li *ngIf=\"userData\">\n          <a [routerLink]=\"'/campagne'\">Campagnes</a>\n      </li>\n      <li *ngIf=\"userData\">\n          <a [routerLink]=\"'/message'\">Messages</a>\n      </li>\n      <li *ngIf=\"userData\">\n          <a [routerLink]=\"'/candidature'\">Candidatures</a>\n      </li>\n      <li *ngIf=\"userData\">\n          <a [routerLink]=\"'/proposition'\">Propositions</a>\n      </li>\n      <li *ngIf=\"userData\">\n          <a [routerLink]=\"'/historique'\">Historique</a>\n      </li>\n      <li *ngIf=\"userData\">\n          <a [routerLink]=\"'/calendrier'\">Mon calendrier</a>\n      </li>\n      <li *ngIf=\"userData\">\n          <a [routerLink]=\"'/profil'\">Mon profil</a>\n      </li>\n      <li *ngIf=\"!userData\">\n          <a [routerLink]=\"'/inscription'\">Inscription</a>\n      </li>\n      <li *ngIf=\"!userData\">\n          <a [routerLink]=\"'/connexion'\">Connexion</a>\n      </li>\n      <li *ngIf=\"userData\">\n          <a href=\"#\" (click)=\"logout()\">Déconnexion</a>\n      </li>\n  </ul>\n</nav>\n\n<h1 *ngIf=\"userData !== null\" [innerText]=\"userData.first_name\"></h1>\n","/*\nImport\n*/\n    // Angular\n    import { Component, OnInit, Input } from '@angular/core';\n//\n\n/*\nComponant configuration\n*/\n    @Component({\n        selector: 'app-item-post',\n        templateUrl: './item-post.component.html'\n    })\n//\n\n\n/*\nComponant class definition\n*/\n    export class ItemPostComponent implements OnInit {\n\n        // Input  data from parent component\n        @Input() post: any;\n\n        constructor(){}\n        ngOnInit(){};\n    };\n//\n","<h2 [innerText]=\"post.title\"></h2>\n<p [innerText]=\"post.body\"></p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:3000/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}