{"version":3,"sources":["./src/app/shared/form-login/form-login.component.ts","./src/app/shared/form-login/form-login.component.html","./src/app/shared/form-login/module.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["/*\nImports & definition\n*/\n  // Imports\n  import { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n  import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n  // Inner\n  import { UserModel } from '../../models/user.model';\n\n  // Definition\n  @Component({\n    selector: 'app-form-login',\n    templateUrl: './form-login.component.html',\n  })\n//\n\n\n/* Export */\n  export class FormLoginComponent implements OnInit, OnChanges {\n\n    /*\n    Config.\n    */\n      // Input/Output\n      @Input() resetFormData: Boolean\n      @Output() sendFormData = new EventEmitter();\n\n      // Declaration\n      public form: FormGroup;\n      public formData: UserModel;\n      public passwordError: Boolean = false;\n\n      // Instanciation\n      constructor(\n        private FormBuilder: FormBuilder\n      ) { };\n    //\n\n\n    /*\n    Methods\n    */\n      // Reset form\n      private resetForm = () => {\n        // Set validator\n        this.form = this.FormBuilder.group({\n          email: [undefined, Validators.required],\n          password: [undefined, Validators.required]\n        });\n\n        // Set form data obbject\n        this.formData = {\n          email: undefined,\n          password: undefined\n        };\n      };\n\n      // Submit form\n      public submitForm = () => {\n        // Set form data\n        this.formData = {\n          email: this.form.value.email,\n          password: this.form.value.password,\n        }\n\n        // Use event emmiter\n        this.sendFormData.emit(this.formData);\n      };\n    //\n\n    /*\n    Hooks\n    */\n      ngOnInit() {\n        this.resetForm();\n      };\n\n      ngOnChanges(changes){\n        // Reset form data when user is logged\n        if( !changes.resetFormData.firstChange && changes.resetFormData.currentValue ) {\n          this.resetForm();\n        };\n      };\n    //\n  };\n//\n","<form autocomplete=\"off\" novalidate [formGroup]=\"form\" (submit)=\"submitForm()\">\n  <label for=\"email-login\">Email</label>\n  <input type=\"email\" name=\"email-login\" id=\"email-login\" required minlength=\"5\" formControlName = \"email\">\n\n  <label for=\"password-login\">Mot de passe</label>\n  <input type=\"password\" name=\"password-login\" id=\"password-login\" required minlength=\"4\" formControlName = \"password\">\n\n  <button type=\"submit\" [disabled]='!form.valid'>Connexion</button>\n</form>\n","/*\r\nImports\r\n*/\r\n    // Angular\r\n    import { NgModule } from '@angular/core';\r\n    import { HttpClientModule } from '@angular/common/http';\r\n    import { CommonModule } from '@angular/common';\r\n    import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n    // Inner\r\n    import { FormLoginComponent } from \"./form-login.component\";\r\n//\r\n\r\n\r\n/*\r\nDefinition & export\r\n*/\r\n    @NgModule({\r\n        declarations: [ FormLoginComponent ],\r\n        imports: [\r\n            CommonModule,\r\n            HttpClientModule,\r\n            FormsModule,\r\n            ReactiveFormsModule\r\n        ],\r\n        exports: [ FormLoginComponent ]\r\n    })\r\n\r\n    export class FormLoginModule {};\r\n//\r\n"],"sourceRoot":"webpack:///"}