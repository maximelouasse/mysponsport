{"version":3,"sources":["./src/app/routes/login-page/login-page.component.ts","./src/app/routes/login-page/login-page.component.html","./src/app/routes/login-page/module.ts","./src/app/routes/login-page/router.ts"],"names":[],"mappings":"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","file":"routes-login-page-module.js","sourcesContent":["/*\nImports & definition\n*/\n  // Imports\n  import { Component, OnInit } from '@angular/core';\n\n  // Inner\n  import { UserModel } from '../../models/user.model';\n  import { ApiResponseModel } from \"../../models/api.response.model\";\n  import { AuthService } from \"../../services/auth/auth.service\";\n  import { ObservablesService } from '../../services/observable/observable.service';\n\n  // Cookie service\n  import { CookieService } from 'ngx-cookie-service';\n\n  import { Router } from '@angular/router';\n\n  // Definition\n  @Component({\n    selector: 'app-login-page',\n    templateUrl: './login-page.component.html',\n    providers: [ AuthService, CookieService ]\n  })\n//\n\n/*\nExport\n*/\n  export class LoginPageComponent implements OnInit {\n\n    // Register form data\n    public resetFormDataRegister: Boolean = false;\n    public displayReturnRegister: Boolean = false;\n    public messageClassRegister: String;\n    public apiMessageRegister: String;\n\n    // Login form data\n    public resetFormDataLogin: Boolean = false;\n    public displayReturnLogin: Boolean = false;\n    public messageClassLogin: String;\n    public apiMessageLogin: String;\n\n    // Module injection\n    constructor(\n      private AuthService: AuthService,\n      private Router: Router,\n      private cookieService: CookieService,\n      private ObservablesService: ObservablesService\n    ) {};\n\n    /*\n    Methods\n    */\n      // Register new user\n      public registerUser = (data: UserModel) => {\n        // Send user data\n        this.AuthService.register(data)\n        .then( (apiResponse: ApiResponseModel) => {\n          // API success response\n          this.messageClassRegister = 'success';\n          this.apiMessageRegister = apiResponse.message;\n          this.displayReturnRegister = true;\n\n          // Reset form data\n          this.resetFormDataRegister = true;\n\n          this.cookieService.set('userId', apiResponse.data.user._id);\n          this.Router.navigate([ '/' ]);\n        })\n        .catch( (apiResponse: ApiResponseModel) => {\n          // API error response\n          this.messageClassRegister = 'error';\n          this.apiMessageRegister = apiResponse.message;\n          this.displayReturnRegister = true;\n        })\n      };\n\n      // Connnect new user\n      public connectUser = (data: UserModel) => {\n        // Send user data\n\n        this.AuthService.login(data)\n        .then( (apiResponse: ApiResponseModel) => {\n          // API success response\n          this.messageClassLogin = 'success';\n          this.apiMessageLogin = apiResponse.message;\n\n          this.displayReturnLogin = true;\n\n          // Reset form data\n          this.resetFormDataLogin = true;\n          console.log(apiResponse.data);\n\n          this.ObservablesService.setObservableData('user', apiResponse.data);\n\n          this.cookieService.set('userId', apiResponse.data.user._id);\n          this.Router.navigate([ '/' ]);\n        })\n        .catch( (apiResponse: ApiResponseModel) => {\n          // API error response\n          this.messageClassLogin = 'error';\n          this.apiMessageLogin = apiResponse.message;\n          this.displayReturnLogin = true;\n        })\n      };\n    //\n\n\n    /*\n    Hooks\n    */\n      ngOnInit() { };\n    //\n  };\n//\n","<h2>Connexion</h2>\n<app-form-login\n  (sendFormData)=\"connectUser($event)\"\n  [resetFormData]=\"resetFormDataLogin\"\n></app-form-login>\n","/*\r\nImports\r\n*/\r\n    // Angular\r\n    import { NgModule } from '@angular/core';\r\n    import { CommonModule } from '@angular/common';\r\n\r\n    // Inner\r\n    import { Routing } from './router';\r\n    import { LoginPageComponent } from './login-page.component';\r\n    import { FormLoginModule } from \"../../shared/form-login/module\";\r\n//\r\n\r\n/*\r\nDefinition\r\n*/\r\n    @NgModule({\r\n        declarations: [ LoginPageComponent ],\r\n        imports: [\r\n            CommonModule,\r\n            Routing,\r\n            FormLoginModule\r\n        ]\r\n    })\r\n//\r\n\r\n\r\n/*\r\nExport\r\n*/\r\n    export class Module {};\r\n//\r\n","/*\r\nImports\r\n*/\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPageComponent } from './login-page.component';\r\n//\r\n\r\n\r\n/*\r\nDefinition\r\n*/\r\nconst route: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginPageComponent\r\n    }\r\n];\r\n//\r\n\r\n\r\n/*\r\nExport\r\n*/\r\nexport const Routing: ModuleWithProviders = RouterModule.forChild(route);\r\n//\r\n"],"sourceRoot":"webpack:///"}